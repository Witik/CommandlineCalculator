-- tests exiting.
-- assumes "bye" as result.
-- untested ----------------------------------------------------------------------------------------- --


TYPEDEF  Operation
    ::=
         Exit
ENDDEF


FUNCDEF operationToString(op::Operation) :: String ::=
	IF isExit(op) THEN "exit" FI 
ENDDEF

-- java -jar /c/Users/Martin/Documents/GitHub/CommandlineCalculator/target/CommandlineCalculator-1.0-jar-with-dependencies.jar | /c/Users/Martin/Documents/netcat-master/netcat-master/nc.exe -lp 9090


-- ----------------------------------------------------------------------------------------- --

PROCDEF sut [Act :: Operation; Res :: Int] ()
	::=
		Act ?opn >-> Res "bye"


-- ----------------------------------------------------------------------------------------- --


CHANDEF  Chans  ::=    Action  :: Operation
                     ; Result  :: String
ENDDEF


-- ----------------------------------------------------------------------------------------- --


MODELDEF  Adder
    ::=
        CHAN IN    Action
        CHAN OUT   Result

        BEHAVIOUR  sut [ Action, Result ] ( )

ENDDEF


-- ----------------------------------------------------------------------------------------- --


CNECTDEF  Sut
    ::=
        CLIENTSOCK

        CHAN  OUT  Action                        HOST "localhost"  PORT 7890
        ENCODE     Action ? opn              ->  ! OperationToString(opn)

        CHAN  IN   Result                        HOST "localhost"  PORT 7890
        DECODE     Result ! fromString(s)   <-   ? s

ENDDEF


CNECTDEF  Sim
    ::=
        SERVERSOCK

        CHAN  IN   Action                        HOST "localhost"  PORT 7890
        DECODE     Action ! fromString(s)   <-   ? s

        CHAN  OUT  Result                        HOST "localhost"  PORT 7890
        ENCODE     Result ? result           ->  ! toString(result)

ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- ----------------------------------------------------------------------------------------- --

