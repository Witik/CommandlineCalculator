{-
TorXakis - Model Based Testing
Copyright (c) 2015-2016 TNO and Radboud University
See license.txt
-}


CHANDEF  Chans ::=  Action; Result
ENDDEF

MODELDEF Model ::=
    CHAN IN    Action
    CHAN OUT   Result

    BEHAVIOUR
        Action >-> Result
ENDDEF

CNECTDEF  Sut
    ::=
        CLIENTSOCK

-- verwacht input ""
        CHAN  OUT  Action            HOST "localhost"  PORT 7890
        ENCODE     Action            ->  ! ""

-- echo'd iets terug
        CHAN  IN   Result            HOST "localhost"  PORT 7890
        DECODE     Result            <-   ? s
ENDDEF

-- ----------------------------------------------------------------------------------------- --
-- Model of (parallel) Adders, for one adder - Adder1 -, and for three adders - Adder3 -,
-- with inputs "Plus(i) x y" and "Minus(i) x y", and output "Result(i) z".
-- ----------------------------------------------------------------------------------------- --


TYPEDEF  Operation
    ::=
          Plus  { p1, p2 :: Int }
        | Minus { m1, m2 :: Int }
        | Error
ENDDEF


-- ----------------------------------------------------------------------------------------- --


PROCDEF  adder  [ Act :: Operation;  Res :: Int ] ( )
    ::=
           Act ?opn [[ isPlus(opn)  ]]  >->  Res !p1(opn)+p2(opn)  >->  adder [ Act, Res ] ( )
        ##
           Act ?opn [[ isMinus(opn) ]]  >->  Res !m1(opn)-m2(opn)  >->  adder [ Act, Res ] ( )
ENDDEF


-- ----------------------------------------------------------------------------------------- --


-- CHANDEF  Chans  ::=    Action  :: Operation
--                      ; Result  :: Int
-- ENDDEF


-- ----------------------------------------------------------------------------------------- --


-- MODELDEF  Adder
--     ::=
--         CHAN IN    Action
--         CHAN OUT   Result

--         BEHAVIOUR  adder [ Action, Result ] ( )

-- ENDDEF


-- ----------------------------------------------------------------------------------------- --


-- CNECTDEF  Sim
--     ::=
--         SERVERSOCK

--         CHAN  IN   Action                        HOST "localhost"  PORT 7890
--         DECODE     Action ! fromString(s)   <-   ? s

--         CHAN  OUT  Result                        HOST "localhost"  PORT 7890
--         ENCODE     Result ? result           ->  ! toString(result)

-- ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- ----------------------------------------------------------------------------------------- --

